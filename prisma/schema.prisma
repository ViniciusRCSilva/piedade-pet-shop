generator client {
    provider = "prisma-client-js"
}

datasource db {
    provider = "postgresql"
    url      = env("DATABASE_URL")
}

enum ProductCategory {
    BAG_FEED // Ração em saca
    KG_FEED // Ração por KG
    SNACK // Snack
    ACCESSORY // Acessório
    TOY // Brinquedo
    MEDICINE // Medicamento
    HYGIENE // Higiene
}

enum OrderStatus {
    PENDING
    CONFIRMED
    CANCELLED
    CONCLUDED
}

model Product {
    id                    String                  @id @default(uuid())
    name                  String
    description           String
    value                 Decimal                 @db.Decimal(10, 2)
    category              ProductCategory
    quantity              Decimal                 @db.Decimal(10, 2)
    image                 String
    createdAt             DateTime                @default(now())
    updatedAt             DateTime                @updatedAt
    OrderItem             OrderItem[]
    UserFavoritesProducts UserFavoritesProducts[]

    @@map("products")
}

model Order {
    id          String      @id @default(uuid())
    userId      String
    userName    String
    userPhone   String
    userAddress String
    status      OrderStatus @default(PENDING)
    totalAmount Decimal     @db.Decimal(10, 2)
    items       OrderItem[]
    createdAt   DateTime    @default(now())
    updatedAt   DateTime    @updatedAt

    @@map("orders")
}

model OrderItem {
    id        String          @id @default(uuid())
    orderId   String
    productId String
    quantity  Decimal         @db.Decimal(10, 2) // Using decimal for KG products
    value     Decimal         @db.Decimal(10, 2)
    category  ProductCategory
    order     Order           @relation(fields: [orderId], references: [id], onDelete: Cascade)
    product   Product         @relation(fields: [productId], references: [id])

    @@map("order_items")
}

model UserFavoritesProducts {
    id        String  @id @default(uuid())
    userId    String
    productId String
    user      User    @relation(fields: [userId], references: [id], onDelete: Cascade)
    product   Product @relation(fields: [productId], references: [id])

    @@unique([userId, productId])
    @@map("user_favorites_products")
}

model User {
    id                String                  @id @default(uuid())
    clerkId           String                  @unique // Clerk User ID
    name              String
    email             String
    phone             String
    address           String
    createdAt         DateTime                @default(now())
    updatedAt         DateTime                @updatedAt
    favoritesProducts UserFavoritesProducts[]

    @@map("users")
}
